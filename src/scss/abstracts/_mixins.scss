@use "breakpoints" as *;

@mixin mq($key) {
	$size: map-get($breakpoints, $key);

	@media only screen and (min-width: $size) {
		@content;
	}
}
// prettier-ignore
@mixin triangle($color: #000, $width: 200px, $height: 200px, $direction: bottom right) {
	background: linear-gradient (to #{$direction}, #0000 0%, #0000 50%, #{$color} 50%, #{$color} 100%);
	height: #{$height};
	width: #{$width};
}
// prettier-ignore
@mixin circle($color: #000, $width: 200px, $height: null) {
	background-color: $color;
	border-radius: 50%;
	height: if($height == null, $width, $height);
	width: $width;
}
@mixin hide-scrollbars {
	-ms-overflow-style: none; // IE, Edge
	scrollbar-width: none; // Firefox

	::-webkit-scrollbar {
		display: none;
	} // Chrome, Safari, Opera
}

// Mixin for shorter box-sizing

@mixin box($width, $height: $width) {
	height: $height;
	width: $width;
}

// Mixin for pseudo elements
// prettier-ignore
@mixin pseudo($loc: before, $content: "", $pos: absolute, $top: 0, $bottom: 0, $left: 0, $right: 0) {
	position: relative;

	&::#{$loc} {
		bottom: $bottom;
		content: $content;
		left: $left;
		position: $pos;
		right: $right;
		top: $top;
		@content;
	}
}
@mixin hover-lift() {
	box-shadow: 0 0.25em 0.5em 0 rgb(#000 0.2);
	transition: transform 350ms ease-in-out;

	@include pseudo($loc: before) {
		box-shadow: 0 0 1.25em 0 rgb(#000 0.4);
		opacity: 0;
		transition: transform 350ms ease-in-out;
	}

	&:hover,
	&:focus {
		transform: scale(1.05);

		&:before {
			opacity: 1;
		}
	}
}

// Mixins for different flex use cases

@mixin flex-column {
	display: flex;
	flex-direction: column;
}
@mixin flex-center {
	align-items: center;
	display: flex;
	justify-content: center;
}
@mixin flex-center-column {
	@include flex-center;
	flex-direction: column;
}
@mixin flex-center-vert {
	align-items: center;
	display: flex;
}
@mixin flex-center-horiz {
	display: flex;
	justify-content: center;
}

// Mixin for creating reusable a box-radius

@mixin radius($radius) {
	border-radius: $radius * 1px;
}

// Mixin for creating a gradient-background

// prettier-ignore
@mixin background-gradient(
	$color,
	$color2: null,
	$direction: to bottom right,
	$saturation: 15%,
	$lightness: 25%,
	$alpha: 0
) {
	@if ($color2 == null) {
		$color2: scale-color($color, $saturation: $saturation, $lightness: $lightness, $alpha: $alpha);
	}
	background-image: linear-gradient($direction, $color, $color2);
}
// prettier-ignore
@mixin background-gradient($start-color, $end-color, $orientation) {
	background: $start-color;

	@if $orientation == "vertical" {
		background: linear-gradient(to bottom, $start-color, $end-color);
	} @else if $orientation == "horizontal" {
		background: linear-gradient(to right, $start-color, $end-color);
	} @else {
		background: radial-gradient(ellipse at center, $start-color, $end-color);
	}
}
